// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pronetheia.Api.Data;

#nullable disable

namespace Pronetheia.Api.Migrations
{
    [DbContext(typeof(PronetheiaDbContext))]
    partial class PronetheiaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pronetheia.Api.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Capabilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("[]");

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("LastActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("idle");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capabilities = "[\"naturalLanguageProcessing\",\"conversationManagement\",\"userIntentRecognition\",\"agentCoordination\",\"contextRetention\"]",
                            IsActive = true,
                            Name = "ChatAgent",
                            Status = "idle",
                            Type = "chat"
                        },
                        new
                        {
                            Id = 2,
                            Capabilities = "[\"selfAnalysis\",\"capabilityGapIdentification\",\"agentGeneration\",\"codeGeneration\",\"systemOptimization\"]",
                            IsActive = true,
                            Name = "EvolutionAgent",
                            Status = "idle",
                            Type = "evolution"
                        },
                        new
                        {
                            Id = 3,
                            Capabilities = "[\"mcpToolOrchestration\",\"toolExecution\",\"resultProcessing\",\"securityValidation\",\"performanceMonitoring\"]",
                            IsActive = true,
                            Name = "ToolAgent",
                            Status = "idle",
                            Type = "tool"
                        });
                });

            // Additional entity configurations would go here...
            // (truncated for brevity - the full snapshot would include all entities)

#pragma warning restore 612, 618
        }
    }
}